{% extends 'base.html.twig' %}

{% block title %}Hello {{ controller_name }}!{% endblock %}
{% block stylesheets %}{% endblock %}
{% block body %}
    <section class="bg-primary" id="about">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 mx-auto text-center">
                    <h2 class="section-heading text-white">Об'є́ктно-орієнто́ване програмува́ння (ООП)</h2>
                    <hr class="light my-4">
                </div>
            </div>
            <div class="alert alert-primary" role="alert">
            <p>Стратегію ООП найкраще описати як зміщення пріоритетів в процесі програмування від функціональності програми до структур даних. Це дозволяє програмісту моделювати в створюваних додатках реальні об'єкти і ситуації.</p>
                <ul>Технологія ООП володіє трьома головними перевагами:
                <li>вона проста для розуміння: ООП дозволяє мислити категоріями повсякденних об'єктів;</li>
                <li>підвищено надійна і проста для супроводу - правильне проектування забезпечує простоту розширення і модифікації об'єктно-орієнтованих програм. Модульна структура дозволяє вносити незалежні зміни в різні частини програми, зводячи до мінімуму ризик помилок програмування;</li>
                    <li>прискорює цикл розробки - модульність і тут відіграє важливу роль, оскільки різні компоненти об'єктно-орієнтованих програм можна легко використовувати в інших програмах, що зменшує надмірність коду і знижує ризик внесення помилок при копіюванні.</li></ul></div>
            <p class="text-faded mb-4">Специфіка ООП помітно підвищує ефективність праці програмістів і дозволяє їм створювати більш потужні, масштабовані та ефективні програми.</p>
                <ul class="text-faded mb-4">Об'єктно-орієнтоване програмування засноване на:
                <li>інкапсуляції;</li>
                <li>поліморфізм;</li>
                <li>наслідування.</li></ul>
            <div class="alert alert-danger" role="alert">Інкапсуляція</div>
                <p class="text-faded mb-4">Інкапсуляція - це механізм, який об'єднує дані і обробляє їх код як єдине ціле.</p>
                <p class="text-faded mb-4">Багато переваг ООП обумовлені одним з його фундаментальних принципів - інкапсуляцією.<br/>
            <p class="text-faded mb-4"><strong>
                Інкапсуляцією називається включення різних дрібних елементів в більш великий об'єкт, в результаті чого програміст працює безпосередньо з цим об'єктом.
                Це призводить до спрощення програми, оскільки з неї виключаються другорядні деталі.</strong>
            </p>
                <p class="text-faded mb-4"><i>Інкапсуляцію можна порівняти з роботою автомобіля з точки зору типового водія. Багато водіїв не розуміються в подробицях внутрішнього устрою машини, але при цьому управляють нею саме так, як було задумано. Нехай вони не знають, як влаштований двигун, гальмо або рульове керування, - існує спеціальний інтерфейс, який автоматизує і спрощує ці складні операції. Сказане також відноситься до інкапсуляції і ООП - багато подробиць "внутрішнього устрою" ховаються від користувача, що дозволяє йому зосередитися на вирішенні конкретних завдань. В ООП ця можливість забезпечується класами, об'єктами і різними засобами вираження ієрархічних зв'язків між ними.</i></p>
            <div class="alert alert-danger" role="alert">Поліморфізм</div>
            <p class="text-faded mb-4">Поліморфізм дозволяє використовувати одні й ті ж імена для схожих, але технічно різних завдань.
                Головним в поліморфізм є те, що він дозволяє маніпулювати об'єктами шляхом створення стандартних інтерфейсів для схожих дій.
                Поліморфізм значно полегшує написання складних програм.</p>
            <div class="alert alert-danger" role="alert">Наслідування</div>
            <p class="text-faded mb-4">Наслідування дозволяє одному об'єкту набувати властивостей іншого об'єкта, не плутайте з копіюванням об'єктів. При копіюванні створюється точна копія об'єкта, а при спадкуванні точна копія доповнюється унікальними властивостями, які характерні тільки для похідного об'єкта.</p>
        </div>
    </section>

{% endblock %}
